def least_time(stocks , s_time):
        # frequencies of the stocks
        frequencies = [0] * 26
        for s in stocks:
            frequencies[ord(s) - ord('A')] += 1
        
        frequencies.sort()

        # max frequency
        f_max = frequencies.pop()
        idle_intervals = (f_max - 1) * s_time
        
        while frequencies and idle_intervals > 0:
            idle_intervals -= min(f_max - 1, frequencies.pop())
        
        if idle_intervals > 0:
            return idle_intervals + len(stocks)
        else:
            return len(stocks)

# Driver code
transaction = ['A', 'A', 'A', 'T', 'T', 'M', 'A']
k = 2

print("Time requires to trade all stocks:", least_time(transaction, k), "intervals")