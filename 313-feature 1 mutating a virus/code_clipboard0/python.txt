 def next_mutation(num):
    # Get the index of the second last number and compare it with the 
    # number next to it, on the right. 
    index = len(num) - 2 

    # Find the index of the number num[index-1] which satisfies 
    # the condition num[index] > num[index-1]. Here num[index] and num[index+1]
    # represent two successive numbers in the sequence. 
    while (index >= 0  and num[index] >= num[index + 1]):
        index-=1 

    # Find the the number num[j] which is just larger than num[index-1]
    # among the numbers lying to the right of num[index-1].
    if index >= 0:
        j = len(num) - 1 
        while (num[j] <= num[index]):
            j-=1 

        # Swap num[index-1] and num[j]
        #self.swap_numbers(num, index, j) 
        num[index],num[j] = num[j],num[index]
    # Reverse the numbers following num[index-1], so that they are in 
    # ascending order.
    reverse_list(num, index + 1) 

    return num 

    # Reverse a list, given a starting index.
def reverse_list( num,  start):
    i = start 
    j = len(num) - 1 

    while i < j:
        num[i],num[j] = num[j],num[i]
        i +=1 
        j-=1   
# Driver code
num =[4,5,2,6,7,3,1] 
print("Input:",num) 
result = next_mutation(num) 
print("Output:",num) 