
def similarity_extent(sample1, sample2):
    n = len(sample1)
    m = len(sample2)

    # initialize an array to store all the computations
    #D =  int[n + 1][m + 1]
    D = [[0 for j in range(m + 1)]for i in range (n+1)]

    # cater the base case of the edit distance between 
    # an empty string and non-empty string.
    for i in range (n+1):
      D[i][0] = i 

    for j in range (m+1):
      D[0][j] = j

    # loop over the nucleotides both samples and compute the 
    # edit distances D[i][j]'s.
    for i in range (1,n+1):
      for j in range (1,m+1):

        up = D[i - 1][j]
        left = D[i][j - 1]
        up_left = D[i - 1][j - 1]

        if sample1[i - 1] == sample2[j - 1]:
          D[i][j] = 1 + min(up, min(left, up_left - 1))
        elif sample1[i - 1] != sample2[j - 1]:
          D[i][j] = 1 + min(up, min(left, up_left))
    return D[n][m]

#Driver code
sample1 = "abcdef"
sample2 = "azced"

print(similarity_extent(sample1, sample2))