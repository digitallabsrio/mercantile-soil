from sortedcontainers import SortedSet
from collections import defaultdict

def densest_deployment(coordinates):
    res = float('inf')
    x = defaultdict(SortedSet)

    for p in coordinates:
        x[p[0]].add(p[1])
    
    for i in x:
        for j in x:
            if i == j or len(x[i]) < 2 or len(x[j]) <2:
                continue 

            y= list(x[i].intersection(x[j]))

            for k in range(1,len(y)):
                res = min(res,abs((j-i)*(y[k] - y[k - 1])))

    if res == float('inf'):
        return 0  
    else:
        return res 

# Example - 1
coordinates = [[0, 3], [2, 3], [1, 2], [0, 1], [2, 1]] 
print("Densest Deployment: " , densest_deployment(coordinates)) 

# Example - 2
coordinates = [[0, 1], [0, 3], [3, 3], [3, 1], [5, 1], [5, 3]] 
print("Densest Deployment: " , densest_deployment(coordinates)) 

# Example - 3
coordinates = [[1, 0], [1, 3], [3, 3], [3, 0]] 
print("Densest Deployment: " , densest_deployment(coordinates)) 

# Example - 4
coordinates = [[0, 0], [1, 3], [3, 3], [3, 0]] 
print("Densest Deployment: " , densest_deployment(coordinates)) 