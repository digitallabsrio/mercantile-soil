from TreeNode import TreeNode

def boundary(root):
    def leftboundary(node):
        if not node or not node.left and not node.right:
            return
        boundary.append(node.val)
        if node.left:
            leftboundary(node.left)
        else:
            leftboundary(node.right)

    def leaves(node):
        if not node:
            return
        leaves(node.left)
        if node != root and not node.left and not node.right:
            boundary.append(node.val)
        leaves(node.right)

    def rightboundary(node):
        if not node or not node.left and not node.right:
            return
        if node.right:
            rightboundary(node.right)
        else:
            rightboundary(node.left)
        boundary.append(node.val)

    if not root:
        return []
    boundary = [root.val]
    leftboundary(root.left)
    leaves(root)
    rightboundary(root.right)
    return boundary

# Driver code
bt = TreeNode(1)
bt.left = TreeNode(2)
bt.left.left = TreeNode(3)
bt.left.right = TreeNode(4)
bt.left.right.left = TreeNode(5)
bt.right = TreeNode(6)
bt.right.left = TreeNode(7)
bt.right.left.right = TreeNode(9)
bt.right.right = TreeNode(8)
bt.right.right.right = TreeNode(10)
print(boundary(bt))