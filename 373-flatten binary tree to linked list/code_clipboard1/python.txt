class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

def flatten(root):
    if not root:
        return 
    
    current = root 
    while current:
        if current.left:
            last = current.left 
            # If the current node has right child
            while last.right:
                    last = last.right 
            # If the current node does not have right child
            last.right = current.right 
            current.right = current.left 
            current.left = None 
        current = current.right 
    return root 

root = TreeNode(1) 
root.left = TreeNode(2) 
root.right = TreeNode(4) 
root.left.left = TreeNode(3) 
root.right.left = TreeNode(5) 
root.right.right = TreeNode(6) 
display_tree(flatten(root))    