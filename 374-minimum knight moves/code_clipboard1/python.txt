def minimum_knight_moves(x, y):
    x, y = sorted(map(abs, (x, y)))
    moves = {(0, 0): 0, (1, 1): 2, (2, 0): 2, (0, 2): 2, (1, 0): 3, (0, 1): 3}
    def dfs(x, y) -> int:
        if (x, y) not in moves:
            moves[(x, y)] = min(dfs(abs(x - 1), abs(y - 2)), dfs(abs(x - 2), abs(y - 1))) + 1
        return moves[(x, y)]
    return dfs(x, y)


# Driver Code
print(minimum_knight_moves(2, 1))
print(minimum_knight_moves(2, 0))
print(minimum_knight_moves(3, 1))
print(minimum_knight_moves(5, 5))